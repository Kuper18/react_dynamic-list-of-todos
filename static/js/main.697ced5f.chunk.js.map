{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","App.tsx","components/TodoModal/TodoModal.tsx","index.tsx"],"names":["TodoList","todos","setIsVisibleModal","setUserId","setPost","setButtonId","buttonId","className","map","todo","id","title","completed","userId","type","onClick","values","boolean","handleClick","TodoFilter","select","query","setSelect","setQuery","isVisibleDeleteButton","value","onChange","event","target","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Option","TodoModal","post","useState","user","setUser","isLoading","setIsLoading","useEffect","getUser","href","name","App","isVisibleModal","setTodos","catch","filteredTodos","filtered","ACTIVE","filter","COMPLETED","normilizeQuery","toLowerCase","trim","includes","filterBy","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.697ced5f.chunk.js","sourcesContent":["import React, { } from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  setIsVisibleModal: (value: boolean) => void;\n  setUserId: (value: number) => void;\n  setPost: (value: Todo) => void;\n  setButtonId: (value: number) => void;\n  buttonId: number,\n};\n\ninterface HandleClick {\n  boolean: boolean;\n  id: number;\n  userId: number;\n  todo: Todo;\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  setIsVisibleModal,\n  setUserId,\n  setPost,\n  setButtonId,\n  buttonId,\n}) => {\n  function handleClick(values: HandleClick) {\n    const {\n      id,\n      boolean,\n      userId,\n      todo,\n    } = values;\n\n    setIsVisibleModal(boolean);\n    setButtonId(id);\n    setUserId(userId);\n    setPost(todo);\n  }\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n\n        {todos.map(todo => {\n          const {\n            id,\n            title,\n            completed,\n            userId,\n          } = todo;\n\n          return (\n            <tr\n              key={id}\n              data-cy=\"todo\"\n              className=\"\"\n            >\n              <td className=\"is-vcentered\">\n                {id}\n              </td>\n              <td className=\"is-vcentered\">\n                {completed && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                <p\n                  className={completed ? 'has-text-success' : 'has-text-danger'}\n                >\n                  {title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                {buttonId === id ? (\n                  <button\n                    data-cy=\"selectButton\"\n                    className=\"button\"\n                    type=\"button\"\n                  >\n                    <span className=\"icon\">\n                      <i\n                        className=\"far fa-eye-slash\"\n                      />\n                    </span>\n                  </button>\n                ) : (\n                  <button\n                    data-cy=\"selectButton\"\n                    className=\"button\"\n                    type=\"button\"\n                    onClick={() => {\n                      // setIsVisibleModal(true);\n                      // setButtonId(id);\n                      // setUserId(userId);\n                      // setPost(todo);\n                      handleClick({\n                        boolean: true, id, userId, todo,\n                      });\n                    }}\n                  >\n                    <span className=\"icon\">\n                      <i\n                        className=\"far fa-eye\"\n                      />\n                    </span>\n                  </button>\n                )}\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import React, { } from 'react';\n\ntype Props = {\n  select: string;\n  query: string;\n  setSelect: (query: string) => void;\n  setQuery: (query: string) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  select,\n  query,\n  setSelect,\n  setQuery,\n}) => {\n  const isVisibleDeleteButton = query || select;\n  const reset = () => {\n    setQuery('');\n    setSelect('');\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            value={select}\n            data-cy=\"statusSelect\"\n            onChange={event => setSelect(event.target.value)}\n          >\n            <option value=\"all\">\n              All\n            </option>\n\n            <option value=\"active\">\n              Active\n            </option>\n\n            <option value=\"completed\">\n              Completed\n            </option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={event => setQuery(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {isVisibleDeleteButton && (\n            // eslint-disable-next-line jsx-a11y/control-has-associated-label\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={reset}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nexport enum Option {\n  ACTIVE = 'active',\n  COMPLETED = 'completed',\n}\n\ninterface FilterOptions {\n  select: string;\n  query: string;\n}\n\nfunction filterBy(todos: Todo[], { select, query }: FilterOptions): Todo[] {\n  let filtered = todos;\n\n  if (select) {\n    switch (select) {\n      case Option.ACTIVE:\n        filtered = filtered.filter(todo => !todo.completed);\n        break;\n\n      case Option.COMPLETED:\n        filtered = filtered.filter(todo => todo.completed);\n        break;\n\n      default:\n        return filtered;\n    }\n  }\n\n  if (query) {\n    const normilizeQuery = query.toLowerCase().trim();\n\n    filtered = filtered\n      .filter(todo => todo.title.toLowerCase().includes(normilizeQuery));\n  }\n\n  return filtered;\n}\n\nexport const App: React.FC = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [isVisibleModal, setIsVisibleModal] = useState(false);\n  const [select, setSelect] = useState('');\n  const [query, setQuery] = useState('');\n  const [userId, setUserId] = useState(0);\n  const [buttonId, setButtonId] = useState(0);\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [post, setPost] = useState<Todo>(todos[0]);\n\n  useEffect(() => {\n    setTimeout(() => {\n      setIsLoading(false);\n    }, 300);\n\n    getTodos()\n      .then(setTodos)\n      .catch();\n  }, [setTodos, setIsLoading]);\n\n  const filteredTodos = filterBy(todos, { select, query });\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                select={select}\n                query={query}\n                setSelect={setSelect}\n                setQuery={setQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading && (\n                <Loader />\n              )}\n              <TodoList\n                todos={filteredTodos}\n                setIsVisibleModal={setIsVisibleModal}\n                setUserId={setUserId}\n                setPost={setPost}\n                buttonId={buttonId}\n                setButtonId={setButtonId}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {isVisibleModal && (\n        <TodoModal\n          userId={userId}\n          post={post}\n          setIsVisibleModal={setIsVisibleModal}\n          setButtonId={setButtonId}\n        />\n      )}\n    </>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\ntype Props = {\n  userId: number;\n  post: Todo;\n  setIsVisibleModal: (value: boolean) => void;\n  setButtonId: (value: number) => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  userId,\n  post,\n  setIsVisibleModal,\n  setButtonId,\n}) => {\n  const [user, setUser] = useState<User>();\n  const [isLoading, setIsLoading] = useState(true);\n\n  const handleClick = () => {\n    setIsVisibleModal(false);\n    setButtonId(0);\n  };\n\n  useEffect(() => {\n    setTimeout(() => {\n      setIsLoading(false);\n    }, 300);\n\n    getUser(userId).then(setUser);\n  }, [userId]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${post.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={handleClick}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {post.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {post.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href=\"mailto:Sincere@april.biz\">\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}
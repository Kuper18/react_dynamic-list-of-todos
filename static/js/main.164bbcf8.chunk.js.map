{"version":3,"sources":["types/Option.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Option","TodoList","todos","setIsVisibleModal","setUserId","setPost","selectedPostId","className","map","todo","id","title","completed","userId","cn","type","onClick","values","boolean","handleClick","TodoFilter","select","query","setSelect","setQuery","value","onChange","event","target","ALL","ACTIVE","COMPLETED","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","post","resetModal","useState","user","setUser","isLoading","setIsLoading","useEffect","getUser","href","email","name","App","isVisibleModal","setTodos","catch","filteredTodos","filtered","filter","normilizeQuery","toLowerCase","trim","includes","filterBy","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.164bbcf8.chunk.js","sourcesContent":["export enum Option {\n  ALL = 'all',\n  ACTIVE = 'active',\n  COMPLETED = 'completed',\n}\n","import React, { } from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  setIsVisibleModal: (value: boolean) => void;\n  setUserId: (id: number) => void;\n  setPost: (post: Todo) => void;\n  selectedPostId: number;\n};\n\ninterface HandleClick {\n  boolean: boolean;\n  userId: number;\n  todo: Todo;\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  setIsVisibleModal,\n  setUserId,\n  setPost,\n  selectedPostId,\n}) => {\n  function handleClick(values: HandleClick) {\n    const {\n      boolean,\n      userId,\n      todo,\n    } = values;\n\n    setIsVisibleModal(boolean);\n    setUserId(userId);\n    setPost(todo);\n  }\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n\n        {todos.map(todo => {\n          const {\n            id,\n            title,\n            completed,\n            userId,\n          } = todo;\n\n          return (\n            <tr\n              key={id}\n              data-cy=\"todo\"\n              className={cn({\n                'has-background-info-light': selectedPostId === id,\n              })}\n            >\n              <td className=\"is-vcentered\">\n                {id}\n              </td>\n              <td className=\"is-vcentered\">\n                {completed && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                <p\n                  className={cn({\n                    'has-text-success': completed,\n                    'has-text-danger': !completed,\n                  })}\n                >\n                  {title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => handleClick({ boolean: true, userId, todo })}\n                >\n                  <span className=\"icon\">\n                    <i\n                      className={cn('far', {\n                        'fa-eye': selectedPostId !== id,\n                        'fa-eye-slash': selectedPostId === id,\n                      })}\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import React, { } from 'react';\nimport { Option } from '../../types/Option';\n\ntype Props = {\n  select: string;\n  query: string;\n  setSelect: (select: string) => void;\n  setQuery: (query: string) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  select,\n  query,\n  setSelect,\n  setQuery,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            value={select}\n            data-cy=\"statusSelect\"\n            onChange={event => setSelect(event.target.value)}\n          >\n            <option value={Option.ALL}>\n              All\n            </option>\n\n            <option value={Option.ACTIVE}>\n              Active\n            </option>\n\n            <option value={Option.COMPLETED}>\n              Completed\n            </option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={event => setQuery(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {query && (\n            // eslint-disable-next-line jsx-a11y/control-has-associated-label\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setQuery('')}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\ntype Props = {\n  userId: number;\n  post: Todo | null;\n  resetModal: () => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  userId,\n  post,\n  resetModal,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    setTimeout(() => {\n      setIsLoading(false);\n    }, 300);\n\n    getUser(userId).then(setUser);\n  }, [userId]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${post?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={resetModal}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {post?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {post?.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { Option } from './types/Option';\n\ninterface FilterOptions {\n  select: string;\n  query: string;\n}\n\nfunction filterBy(todos: Todo[], { select, query }: FilterOptions): Todo[] {\n  let filtered = todos;\n\n  if (select) {\n    switch (select) {\n      case Option.ACTIVE:\n        filtered = filtered.filter(todo => !todo.completed);\n        break;\n\n      case Option.COMPLETED:\n        filtered = filtered.filter(todo => todo.completed);\n        break;\n\n      default:\n        return filtered;\n    }\n  }\n\n  if (query) {\n    const normilizeQuery = query.toLowerCase().trim();\n\n    filtered = filtered\n      .filter(todo => todo.title.toLowerCase().includes(normilizeQuery));\n  }\n\n  return filtered;\n}\n\nexport const App: React.FC = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [isVisibleModal, setIsVisibleModal] = useState(false);\n  const [select, setSelect] = useState('');\n  const [query, setQuery] = useState('');\n  const [userId, setUserId] = useState(0);\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [post, setPost] = useState<Todo | null>(null);\n\n  useEffect(() => {\n    setTimeout(() => {\n      setIsLoading(false);\n    }, 300);\n\n    getTodos()\n      .then(setTodos)\n      .catch();\n  }, [setTodos, setIsLoading]);\n\n  const filteredTodos = filterBy(todos, { select, query });\n\n  const resetModal = () => {\n    setIsVisibleModal(false);\n    setPost(null);\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                select={select}\n                query={query}\n                setSelect={setSelect}\n                setQuery={setQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading && (\n                <Loader />\n              )}\n              <TodoList\n                todos={filteredTodos}\n                setIsVisibleModal={setIsVisibleModal}\n                setUserId={setUserId}\n                setPost={setPost}\n                selectedPostId={post?.id || 0}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {isVisibleModal && (\n        <TodoModal\n          userId={userId}\n          post={post}\n          resetModal={() => resetModal()}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}